2*2
install.packages(c("XML", "textreuse"))
p <- 29.46
i <- 24.57
r <- 250
r - (p+1)
250-54.03
195.97 + 25.23
log(25)
2.718 * 3.218
3.218^2.718
3.718^2.718
3.218 ^2.718281828
doc.object <- xmlTreeParse(file = "../Projectivity/working/DD_Xen_Cyr1.xml")
require(XML)
doc.object <- xmlTreeParse(file = "../Projectivity/working/DD_Xen_Cyr1.xml")
setwd("~/syntacto_stylistics/R_files")
doc.object <- xmlTreeParse(file = "../Projectivity/working/DD_Xen_Cyr1.xml")
top <- xmlRoot(doc.object)
top[[7]]
a <- xmlSApply(top[[7]], function(x) xmlGetAttr(x, "postag"))
as.vector(a)
grep("v", a)
grep("u---", a)
a <- as.vector(a)
b <- length(grep("v", a))
c <- length(a)
c <- length(a) - length(grep("u---", a))
d <- b/c
a <- NULL
b <- NULL
c <- NULL
d <- NULL
i <- 7
for (i in i:length(top)) {
a <- xmlSApply(top[[7]], function(x) xmlGetAttr(x, "postag"))
a <- as.vector(a)
# record number of verbs in vector "a"
b <- length(grep("v", a))
# record number of tokens in sentence less punctuation
c <- length(a) - length(grep("u---", a))
# ratio of number of verbs to total tokens (less punctuation)
d <-append(d, b/c)
}
a <- NULL
b <- NULL
c <- NULL
d <- NULL
i <- 7
for (i in i:length(top)) {
a <- xmlSApply(top[[i]], function(x) xmlGetAttr(x, "postag"))
a <- as.vector(a)
# record number of verbs in vector "a"
b <- length(grep("v", a))
# record number of tokens in sentence less punctuation
c <- length(a) - length(grep("u---", a))
# ratio of number of verbs to total tokens (less punctuation)
d <-append(d, b/c)
}
rm(list = ls())
doc.object <- xmlTreeParse(file = "../Projectivity/working/Result_DD_Combined.xml")
top <- xmlRoot(doc.object)
top[[7]]
a <- NULL
b <- NULL
c <- NULL
d <- NULL
i <- 7
for (i in i:length(top)) {
a <- xmlSApply(top[[i]], function(x) xmlGetAttr(x, "postag"))
a <- as.vector(a)
# record number of verbs in vector "a"
b <- length(grep("v", a))
# record number of tokens in sentence less punctuation
c <- length(a) - length(grep("u---", a))
# ratio of number of verbs to total tokens (less punctuation)
d <-append(d, b/c)
}
time_dataframe <- read.csv(file = "../Projectivity/working/Times_Combined.csv")
View(time_dataframe)
a <- NULL
b <- NULL
c <- NULL
d <- NULL
i <- 7
e <- NULL
for (i in i:length(top)) {
a <- xmlSApply(top[[i]], function(x) xmlGetAttr(x, "postag"))
a <- as.vector(a)
# record number of verbs in vector "a"
b <- length(grep("v", a))
# record number of tokens in sentence less punctuation
c <- length(a) - length(grep("u---", a))
# ratio of number of verbs to total tokens (less punctuation)
d <-append(d, b/c)
# number of verbs in sentence
e <- append (e, b)
}
time_dataframe$Verbs <-
time_dataframe$Verbs <- e
time_dataframe$VerbPerToken <- d
View(time_dataframe)
rm(list = ls())
doc.object <- xmlTreeParse(file = "../Projectivity/working/Result_DD_Combined.xml")
top <- xmlRoot(doc.object)
top[[7]]
a <- NULL
b <- NULL
c <- NULL
d <- NULL
i <- 7
for (i in i:length(top)) {
a <- as.numeric(xmlGetAttr(top[[i]], "DepDist"))
b <- append(b, a)
c <- as.numeric(xmlGetAttr(top[[i]], "id"))
d <- append(d, c)
}
which (is.na(b))
time_dataframe$DepDist <- b
time_dataframe <- read.csv(file = "../Projectivity/working/Times_Combined.csv")
View(time_dataframe)
time_dataframe$DepDist <- b
time_dataframe$topSentNum <- d
write.csv(time_dataframe, file = "../Projectivity/working/working_Combined.csv")
View(time_dataframe)
rm(list = ls())
doc.object <- xmlTreeParse(file = "../Projectivity/working/Result_DD_Combined.xml")
top <- xmlRoot(doc.object)
a <- NULL
b <- NULL
c <- NULL
d <- NULL
e <- NULL
i <- 7
for (i in i:length(top)) {
a <- xmlSApply(top[[i]], function(x) xmlGetAttr(x, "postag"))
a <- as.vector(a)
# record number of verbs in vector "a"
b <- length(grep("v", a))
# record number of tokens in sentence less punctuation
c <- length(a) - length(grep("u---", a))
# ratio of number of verbs to total tokens (less punctuation)
d <-append(d, b/c)
# number of verbs in sentence
e <- append (e, b)
}
time_dataframe <- read.csv(file = "../Projectivity/working/working_Combined.csv")
time_dataframe$Verbs <- e
time_dataframe$VerbPerToken <- d
write.csv(time_dataframe, file = "../Projectivity/working/working_Combined.csv")
colnames(time_dataframe)
time <- time_dataframe$depPerWord
log_tiime <- log(time_dataframe$depPerWord)
summary(time)
summary(log_tiime)
hist(time)
hist(log_tiime)
depVar <- time_dataframe$DepDist
summary(depVar)
summary(log(depVar))
hist(depVar)
hist(log(depVar))
plot(time, depVar)
lines(lowess(time, depVar), col="blue") # lowess line (x,y)
cor(time, depVar)
plot(log_tiime, depVar)
cor(time, depVar)
plot(time, log(depVar))
lines(lowess(time, log(depVar)), col="blue") # lowess line (x,y)
cor(log_tiime, log(depVar))
lines(lowess(log_tiime, log(depVar)), col="blue") # lowess line (x,y)
plot(log_time, log(depVar))
lines(lowess(log_time, log(depVar)), col="blue") # lowess line (x,y)
plot(log_time, log(depVar))
log_time <- log(time_dataframe$depPerWord) # log() of time to compensate for skew
summary(log_time)
hist(log_time)
plot(log_time, log(depVar))
lines(lowess(log_time, log(depVar)), col="blue") # lowess line (x,y)
cor(log_tiime, log(depVar))
require(gmodels)
CrossTable(x = time, y = depVar)
cor(log_tiime, log(depVar))
cor(time, depVar)
corr(time, log(depVar))
cor(time, log(depVar))
cor(log_time, log(depVar))
summary(time)
summary(depVar)
which(time < 4)
index <- which(time < 4)
summary(time[index])
summary(depVar[index])
cor(time[index], depVar[index])
cor(log (time[index]), log(depVar[index])
)
cor(log (time[index]), log(depVar[index]))
plot(log (time[index]), log(depVar[index]))
summary(log(time[index]))
summary(log(depVar[index]))
lines(lowess(log(time[index]), log(depVar[index])), col="red")
exp(1.4)
exp(2)
colnames(time_dataframe)
depVar <- time_dataframe$VerbPerToken
summary(depVar)
summary(log(depVar))
hist(depVar)
hist(log(depVar))
hist(depVar)
plot(time, depVar)
cor(time, log(depVar))
cor(time, depVar)
cor(log (time), depVar)
exp(.4)
exp(.7)
exp(0)
lines(lowess(log(time[index]), log(depVar[index])), col="red", xlab-"pp")
plot(log (time[index]), log(depVar[index]), xlab = "Time per Word")
lines(lowess(log(time[index]), log(depVar[index])), col="red",)
plot(log (time[index]), log(depVar[index]),)
lines(lowess(log(time[index]), log(depVar[index])), col="red",)
lines(lowess(log(time[index]), log(depVar[index])), col="red")
plot(log (time[index]), log(depVar[index]))
lines(lowess(log(time[index]), log(depVar[index])), col="red")
plot(log (time[index]), log(depVar[index]))
lines(lowess(log(time[index]), log(depVar[index])))
lines(lowess(log(time[index]), log(depVar[index]), f = 2/3))
lines(lowess(log(time[index]), log(depVar[index]), f = 1))
lines(lowess(log(time[index]), log(depVar[index]), f = 5))
depVar <- time_dataframe$DepDist
time <- time_dataframe$depPerWord # our independent varaible
plot(time, depVar)
cor(time, depVar)
index <- which(time < 4)
summary(time[index])
summary(depVar[index])
cor(log (time[index]), log(depVar[index]))
plot(log(time[index]), log(depVar[index]))
lines(lowess(log(time[index]), log(depVar[index])))
plot(log(time[index]), log(depVar[index]), xlab = Time per Word)
plot(log(time[index]), log(depVar[index]), xlab = "Time per Word")
lines(lowess(log(time[index]), log(depVar[index])) col = "red")
lines(lowess(log(time[index]), log(depVar[index])), col = "red")
plot(log(time[index]), log(depVar[index]), xlab = "Time per Word (log)")
plot(log(time[index]), log(depVar[index]), xlab = "Time per Word (log)", ylab = "Dep. Dist. (log)")
plot(log(time[index]), log(depVar[index]), xlab = "Time per Word (log)", ylab = "Dep. Dist. (log)", main = "Syntax Difficulty")
lines(lowess(log(time[index]), log(depVar[index])), col = "red")
exp(1)
exp(1.5)
exp(.75)
exp(.2)
plot(time[index], depVar[index])
plot(time[index], depVar[index],  xlab = "Time per Word", ylab = "Dep. Dist.", main = "Syntax Difficulty")
plot(time[index], depVar[index],  xlab = "Time per Word", ylab = "Dependency Distance", main = "Syntax Difficulty")
lines(lowess(time[index], depVar[index]))
cor(log (time[index]), log(depVar[index]), col = "red")
lines(lowess(time[index], depVar[index]), col = red)
lines(lowess(time[index], depVar[index]) col = "red")
lines(lowess(time[index], depVar[index]), col = "red")
which(time_dataframe$DepDist > 2.75)
<- lowlim <- which(time_dataframe$DepDist > 2.75)
lowlim <- which(time_dataframe$DepDist > 2.75)
sweetSpot <- which(time_dataframe[lowlim] < 3.25)
sweetSpot <- which(time_dataframe$DepDist[lowlim] < 3.25)
top{6 + sweetSpot[1]}
top[[6 + sweetSpot[1]]]
top[[6 + sweetSpot[2]]]
time_dataframe$DepDist[sweetSpot]
lowlim <- which(time_dataframe$DepDist > 2.75)
time_dataframe$DepDist[lowlim]
sweetSpot <- which(time_dataframe$DepDist[lowlim] < 3.25 & > 2.75)
uplim <- which(time_dataframe$DepDist < 3.25)
which(lowim %in% uplim)
which(lowlim %in% uplim)
sweetspot <- which(lowlim %in% uplim)
time_dataframe$DepDist[sweetspot]
cost * rate
cost <- 18960
cost * rate
rate <- 2297
cost * rate
rate <- 2.97
cost <- 18960
cost * rate
cost <- 18.960
rate <- 22.97
cost * rate
cost <- 18.
cost * rate
which(time > 4)
time
rm(list = ls())
time_dataframe <- read.csv(file = "../Projectivity/working/Times_Combined.csv")
View(time_dataframe)
time_dataframe <- read.csv(file = "../Projectivity/working/working_Combined.csv")
View(time_dataframe)
indepVar <- time_dataframe$DepDist
time <- time_dataframe$depPerWord # our dependent varaible
summary(time)
summary(indepVar)
which(time < 5)
index <- which(time < 5)
summary(time[index])
indepVar
summary(indepVar[index])
index <- which(time < 4)
summary(time[index])
summary(indepVar[index])
plot(indepVar[index], time[index])
plot(log(indepVar[index]), log(time[index])
plot(log(indepVar[index]), log(time[index]))
plot (log(indepVar[index]), log(time[index])  )
lines(loess(log(indepVar[index])), log(time[index]), col = "red")
x <- log(indepVar[index])
y <- log(time[index])
lines(lowess(x, y))
lines(lowess(x, y), col = "red")
log(2)
log(1)
log(.2)
c <- indepVar[index]
d <- time[index]
plot(x, y)
plot(c,d)
which(time_dataframe$DepDist==2)
lm(x,y)
lm(x ~ y)
model <- lm (y ~ x)
summary(model)
e <- time_dataframe$words[index]
model <- lm (y ~ x + e)
summary(model)
f <- time_dataframe$VerbPerToken[index]
model <- lm (y ~ x + e + f)
summary(model)
9^5
5^4
5^3
4^3
10^8
17/18
14/18
15/18
7/9
8/9
12/15
14/16
16/18
11/16
13/18
8/9
8/11
11/12
208 * 24 * 5
summary(time)
summary(log_time)
summary(indepVar)
ata
hist(time)
hist(time, col = "pink")
hist(time, col = "pink",main = "Dependency Time per Word")
boxplot(time)
index <- which(time < 5)
summary(time[index])
indepVar <- time_dataframe$DepDist
summary(indepVar)
summary(indepVar[index])
plot (log(indepVar[index]), log(time[index])  )
lines(lowess(x, y), col = "red")
model <- lm (y ~ x )
summary(model)
plot (log(indepVar[index]), log(time[index]) pch = 2 )
plot (log(indepVar[index]), log(time[index]), pch = 2 )
plot (log(indepVar[index]), log(time[index]), pch = . )
plot (log(indepVar[index]), log(time[index]), pch = "." )
plot (log(indepVar[index]), log(time[index]), main = "DD and Sentence Difficulty")
plot (log(indepVar[index]), log(time[index]), main = "DD and Sentence Difficulty", ylab = "Time per Word (log)", xlab = "Dep. Dist. (log)")
xlab = "Dependency Distance (log)")
plot (log(indepVar[index]), log(time[index]), main = "DD and Sentence Difficulty", ylab = "Time per Word (log)",
xlab = "Dependency Distance (log)")
lines(lowess(x, y), col = "red")
cor(log(x), log(y))
x <- log(indepVar[index])
y <- log(time[index])
cor(x,y)
lines(lowess(x, y), col = "red", lwd = 2)
plot (log(indepVar[index]), log(time[index]), main = "DD and Sentence Difficulty", ylab = "Time per Word (log)",
xlab = "Dependency Distance (log)")
lines(lowess(x, y), col = "red", lwd = 2)
exp(2.5)
exp(1)
which(time_dataframe$DepDist == 2)
time_dataframe$depPerWord [which(time_dataframe$DepDist == 2)]
top_index <-
DD2_top <- top[top_index]
doc.object <- xmlTreeParse(file = "../Projectivity/working/Result_DD_Combined.xml")
top <- xmlRoot(doc.object)
top[[7]]
top[[6]]
DD2_top <- top[top_index]+6
top_index <-  [which(time_dataframe$DepDist == 2)]
top_index <-  which(time_dataframe$DepDist == 2)
DD2_top <- top[top_index]+6
DD2_top <- top[6 + top_index]
DD2_top
time_dataframe$sent [which(time_dataframe$DepDist == 2)]
time_dataframe$depPerWord [which(time_dataframe$DepDist == 2)]
which(time_dataframe$words < 11)
which(time < 5)
which(time_dataframe$words > 10)
which(time < 5)
no_shorties <- which(time_dataframe$words > 10)
no_outliers <- which(time < 5)
interaction(no_shorties, no_outliers)
intersect (no_shorties, no_outliers)
new_index <- intersect (no_shorties, no_outliers)
plot(indepVar[new_index], time[new_index])
plot(log(indepVar[new_index]), log(time[new_index])
plot(log(indepVar[new_index]), log(time[new_index])
plot(log(indepVar[new_index]), log(time[new_index]))
a <- log(indepVar[new_index])
b <-  log(time[new_index])
cor(a,b)
cor(x,y)
lines( lowess(a,b))
no_shorties <- which(time_dataframe$words > 15)
no_outliers <- which(time < 5)
intersect (no_shorties, no_outliers)
new_index <- intersect (no_shorties, no_outliers)
plot(log(indepVar[new_index]), log(time[new_index]))
a <- log(indepVar[new_index])
b <-  log(time[new_index])
cor(a,b)
lines( lowess(a,b))
summary(model)
hs < 54 + 68
hs <- 54 + 68
qpts <- 271.01 + 197.007
qpts / hrs
qpts / hs
6^2
220*10
2200/60
40 * 20
18 / 19
8/11
