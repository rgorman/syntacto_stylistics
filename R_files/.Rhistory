rownames(final.m) <-names_for_files.v
rownames(final.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.0025]
dim(smaller.m)
View(smaller.m)
dist.smaller.m <- dist(smaller.m)
dist.smaller.m
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank")
dist.smaller.m <- dist(smaller.m, method = "manhattan")
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank")
dist.smaller.m <- dist(smaller.m, method = "canberra")
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank")
setwd("~/author_attribution/R_files")
source("code/corpusFunctions.R")
input.dir <- "sWord_input/stat_files/divided_authors"
files.v <- dir(path=input.dir, pattern=".*xml")
length(files.v)
files.v
i <- 1
book.freqs.l <- list ()
for (i in 1:length(files.v)) {
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
swords <-getNodeSet(doc.object, "//sWord", )
sword.content <- paste(sapply(swords, xmlValue), collapse = NULL)
sword.content <-tolower(sword.content)
book.freqs.t <-table(sword.content)
book.freqs.rel.t <- 100*(book.freqs.t/sum(book.freqs.t))
book.freqs.l[[files.v[i]]] <-book.freqs.rel.t
}
freqs.l <- mapply(data.frame, ID=seq_along(book.freqs.l),
book.freqs.l, SIMPLIFY=FALSE, MoreArgs=list(stringsAsFactors=FALSE))
freqs.df <- do.call(rbind, freqs.l)
names(freqs.df)
result <- xtabs(Freq ~ ID+sword.content, data=freqs.df)
final.m <- apply(result, 2, as.numeric)
dim(final.m)
names_for_files.v <- gsub (".xml", "", files.v)
rownames(final.m) <-names_for_files.v
rownames(final.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.0025]
dim(smaller.m)
dist.smaller.m <- dist(smaller.m)
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank")
library(dendextend)
as.dendrogram(groups)
dend <- as.dendrogram(groups)
dend2 <- color_branches(dend, k=3)
plot(dend2)
dend2 <- color_branches(dend, k=2)
plot(dend2)
dend2 <- color_branches(dend, k=7)
plot(dend2)
dend2 <- color_branches(dend, k=4)
plot(dend2)
dend2 <- color_branches(dend, k=3)
plot(dend2)
labels_colors(dend2)
labels_colors(dend2) <rainbow(4)
plot(dend2)
labels_colors(dend2) <- rainbow(4)[2]
plot(dend2)
labels_colors(dend2) <- rainbow(4)[1]
plot(dend2)
dend2 <- hang.dendrogram(dend2, hang_height = 0.2)
plot(dend2)
dend2 <- hang.dendrogram(dend2, hang_height = 0.1)
plot(dend2)
dend2 <- hang.dendrogram(dend2, hang_height = 0.5)
plot(dend2)
rownames(final.m)
sort_levels_values(dend2)
test <- c("homer", "hesiod", "polybius")
as.numeric(test)
levels(test)
levels(test)[1] <- homer
levels(test)[1] <- "homer"
levels(test)
levels(test)[2] <- "hesiod"
levels(test)
levels(test)[3] <- "polybius"
as.numeric(test)
as.numeric(levels(test))
sort_levels_values(test)
sort_levels_values(levels(test))
order.dendrogram(dend2)
files.v
rainbow_hcl()
labels_colors(dend2)
files.v
labels_colors(dend2)
labels_colors(dend2[1]) <- rainbow(12)[1]
labels_colors(dend2) <- rainbow(12)[1]
labels_colors(dend2)
labels_colors(dend2)[1] <- rainbow(12)[1]
labels_colors(dend2)
labels_colors(dend2)[1]
labels_colors(dend2)[1] <- rainbow(12)[2]
labels_colors(dend2)[1]
labels_colors(dend2)
order.dendrogram(dend2)
orders <- order.dendrogram(dend2)
orders[26]
orders[27]
orders[27:33]
labels_colors(dend2)[orders[27:33]] <- rainbow(12)[1]
labels_colors(dend2)
order.dendrogram(dend2)
labels_colors(dend2)[orders[5]] <- rainbow(12)[2]
labels_colors(dend2)
labels_colors(dend2)[5]
labels_colors(dend2)[5] <- rainbow(12)[2]
labels_colors(dend2)
labels_colors(dend2)[2] <- rainbow(12)[3]
labels_colors(dend2)
plot(dend2)
labels_colors <-1
plot(dend2)
labels_colors(dend2) <-1
plot(dend2)
labels_colors(dend2) <- 2
plot(dend2)
dend2 <- color_labels(dend2, k=3)
plot(dend2)
dend2 <- hang.dendrogram(dend2, hang_height = 0)
plot(dend2)
dend2 <- hang.dendrogram(dend2, hang_height = -0.1)
plot(dend2)
dend3 <- rect.dendrogram(dend2, k=3)
dend2 %>% rect.dendrogram(k=3)
dend2 %>% rect.dendrogram(k=1)
dend2 %>% rect.dendrogram()
rect.dendrogram(dend2, k=3)
rect.dendrogram(dend2, k=3)
rect.dendrogram(dend2, h=10)
rect.dendrogram(dend2, h=5)
rect.dendrogram(dend2, k=3)
rect.dendrogram(dend2, k=3)
colors()
plot(groups, hang=-1, xlab="Perseus Treebank")
dend2 <- color_branches(dend, k=3)
plot(dend2)
dend2 <- color_labels(dend2, k=3)
plot(dend2)
labels_colors(dend2)
labels_colors(dend2)[2] <- red
labels_colors(dend2)[2] <- "red"
labels_colors(dend2)
plot(dend2)
labels_colors(dend2)[1] <- "red"
labels_colors(dend2)[1] <- "red"
labels_colors(dend2)[1] <- "indianred1" # Diodorus
plot(dend2)
labels_colors(dend2)[1] <- "red" # Hdt
labels_colors(dend2)[2] <- "indianred1" # Diodorus
plot(dend2)
labels_colors(dend2)
labels_colors(dend2)[c(3,7)] <- "hotpink1"
plot(dend2)
labels_colors(dend2)[4] <- "darksalmon"
plot(dend2)
labels_colors(dend2)[c(8,9)] <- "deeppink" # Polybius
plot(dend2)
labels_colors(dend2)[6] <- "darkorange" # Lysias
plot(dend2)
labels_colors(dend2)
labels_colors(dend2)[c(10, 11, 12, 13, 14, 15)] <- "forestgreen"
labels_colors(dend2)[c(16, 17, 18, 19, 20, 21)] <- "darkolivegreen1"
plot(dend2)
labels_colors(dend2)[c(16, 17, 18, 19, 20, 21)] <- "chartreuse1"
plot(dend2)
labels_colors(dend2)[c(22, 23, 24, 25, 26)] <- "cornflowerblue"
2
labels_colors(dend2)[c(27, 28, 29, 30, 31, 32, 33)] <- "red"
plot(dend2)
labels_colors(dend2)[c(27, 28, 29, 30, 31, 32, 33)] <- "blue"
plot(dend2)
labels_colors(dend2)[c(34, 35, 36)] <- "cyan"
plot(dend2)
labels_colors(dend2)[c(34, 35, 36)] <- "blueviolet"
plot(dend2)
labels_colors(dend2)[c(16, 17, 18, 19, 20, 21)] <- "darkgoldenrod" # Odyssey
plot(dend2)
dend3 <- hang.dendrogram(dend2, hang_height = 0.1)
plot(dend3)
labels_cex(dend3)
labels_cex(dend3) <- 1.5
plot(dend3)
labels_cex(dend3) <- 1.1
plot(dend3)
labels_cex(dend3) <- 1.05
plot(dend3)
labels_cex(dend3) <- 1.1
dend3 <- hang.dendrogram(dend2, hang_height = 0.1)
plot(dend3)
labels_cex(dend3) <- 1.1
plot(dend3)
labels_cex(dend3) <- 1
plot(dend3)
get_leaves_branches_attr(dend3, "height")
dend3 %>% get_leaves_attr("height")
dend4 <- hang.dendrogram(dend3, hang_height = .6)
plot(dend4)
dend4 <- hang.dendrogram(dend3, hang_height = 1.5)
plot(dend4)
dend4 <- hang.dendrogram(dend3, hang_height = 0.1)
plot(dend4)
dend4 <- hang.dendrogram(dend3, hang_height = 0)
plot(dend4)
dend4 <- hang.dendrogram(dend3, hang_height = -2)
plot(dend4)
dend4 <- hang.dendrogram(dend3, hang_height = 1)
plot(dend4)
dend4
dend4 <- rank_branches(dend4, diff_height = 1)
plot(dend4)
dend4 <- rank_branches(dend4, diff_height = 2)
plot(dend4)
get_branches_heights(dend3)
dend4[[1]]
dend4[[1]][1]
dend3[[1]][1]
dend3[[1]][1]
plot(flatten.dendrogram(dend3))
groups
groups[[1]]
groups[[2]]
groups[[5]]
groups[[6]]
groups[[7]]
groups[[8]]
dend4
dend4[[1]]
dend4[[2]]
dend4[[2]][1]
dend3[[2]][1]
setwd("~/syntacto_stylistics/R_files")
input.dir <- "../APA_Poster/sWord_files/divided_authors"
files.v <- dir(path=input.dir, pattern=".*xml")
length(files.v)
i <- 1
book.freqs.l <- list ()
for (i in 1:length(files.v)) {
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
swords <-getNodeSet(doc.object, "//sWord", )
sword.content <- paste(sapply(swords, xmlValue), collapse = NULL)
sword.content <-tolower(sword.content)
book.freqs.t <-table(sword.content)
book.freqs.rel.t <- 100*(book.freqs.t/sum(book.freqs.t))
book.freqs.l[[files.v[i]]] <-book.freqs.rel.t
}
freqs.l <- mapply(data.frame, ID=seq_along(book.freqs.l),
book.freqs.l, SIMPLIFY=FALSE, MoreArgs=list(stringsAsFactors=FALSE))
freqs.l <- mapply(data.frame, ID=seq_along(book.freqs.l),
book.freqs.l, SIMPLIFY=FALSE, MoreArgs=list(stringsAsFactors=FALSE))
freqs.df <- do.call(rbind, freqs.l)
names(freqs.df)
result <- xtabs(Freq ~ ID+sword.content, data=freqs.df)
final.m <- apply(result, 2, as.numeric)
dim(final.m)
names_for_files.v <- gsub (".xml", "", files.v)
rownames(final.m) <-names_for_files.v
rownames(final.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.0025]
dim(smaller.m)
dist.smaller.m <- dist(smaller.m)
plot(groups, hang=-1, xlab="Perseus Treebank")
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop", color="red")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop", col="red")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop", col.lab="red")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop", col.lines="red")
dend <- as.dendrogram(groups)
dend2 <- color_branches(dend, k=3)
plot(dend2)
dend2 <- color_labels(dend2, k=3)
plot(dend2)
dend3 <- hang.dendrogram(dend2, hang_height = 0.1)
plot(dend3)
plot(dend3, main="Dendroram of Ancient Languages Dependency Treebank")
plot(dend3, main="Dendrogram of Ancient Languages Dependency Treebank")
labels_colors(dend3)[1] <- "red" # Hdt
labels_colors(dend3)[2] <- "indianred1" # Diodorus
labels_colors(dend3)[c(3,7)] <- "hotpink1" # # Plutarch
labels_colors(dend3)[4] <- "darksalmon" # Thuc.
labels_colors(dend3)[5] <- "darkred" # Athen.
labels_colors(dend3)[6] <- "darkorange" # Lysias
labels_colors(dend3)[c(8,9)] <- "deeppink" # Polybius
labels_colors(dend3)[c(10, 11, 12, 13, 14, 15)] <- "forestgreen" # Iliad
labels_colors(dend3)[c(16, 17, 18, 19, 20, 21)] <- "darkgoldenrod" # Odyssey
labels_colors(dend3)[c(22, 23, 24, 25, 26)] <- "cornflowerblue" # Sophocles
labels_colors(dend3)[c(27, 28, 29, 30, 31, 32, 33)] <- "blue" # Aeschylus
labels_colors(dend3)[c(34, 35, 36)] <- "blueviolet" # Hesiod
plot(dend3)
plot(cutree(dend3))
plot(cutree(dend3, k=3))
plot(cutree(ladderize(dend3))
)
plot(ladderize(dend3))
plot(ladderize(dend3), horiz = TRUE)
plot(dend3, horiz = TRUE)
plot(dend3, main="Dendrogram of Ancient Languages Dependency Treebank")
plot(dend, main="Dendrogram of Ancient Languages Dependency Treebank")
source("code/corpusFunctions.R")
input.dir <- "../APA_Poster/sWord_files/divided_authors"
files.v <- dir(path=input.dir, pattern=".*xml")
length(files.v)
i <- 1
book.freqs.l <- list ()
for (i in 1:length(files.v)) {
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
swords <-getNodeSet(doc.object, "//sWord", )
sword.content <- paste(sapply(swords, xmlValue), collapse = NULL)
sword.content <-tolower(sword.content)
book.freqs.t <-table(sword.content)
book.freqs.rel.t <- 100*(book.freqs.t/sum(book.freqs.t))
book.freqs.l[[files.v[i]]] <-book.freqs.rel.t
}
freqs.l <- mapply(data.frame, ID=seq_along(book.freqs.l),
book.freqs.l, SIMPLIFY=FALSE, MoreArgs=list(stringsAsFactors=FALSE))
freqs.df <- do.call(rbind, freqs.l)
names(freqs.df)
result <- xtabs(Freq ~ ID+sword.content, data=freqs.df)
final.m <- apply(result, 2, as.numeric)
dim(final.m)
names_for_files.v <- gsub (".xml", "", files.v)
rownames(final.m) <-names_for_files.v
rownames(final.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.0025]
dim(smaller.m)
dist.smaller.m <- dist(smaller.m)
groups <- hclust(dist.smaller.m, method="ward.D2")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Poop", col.lines="red")
plot(groups, hang=-1, xlab="Perseus Treebank", main="Dendrogram of Ancient Languages Dependency Treebank")
dend <- as.dendrogram(groups)
dend2 <- color_branches(dend, k=3)
plot(dend2)
dend2 <- color_labels(dend2, k=3)
plot(dend2)
dend3 <- hang.dendrogram(dend2, hang_height = 0.1)
plot(dend3, main="Dendrogram of Ancient Languages Dependency Treebank")
plot(dend2)
labels_colors(dend2)[1] <- "red" # Hdt
labels_colors(dend2)[2] <- "indianred1" # Diodorus
labels_colors(dend2)[c(3,7)] <- "hotpink1" # # Plutarch
labels_colors(dend2)[4] <- "darksalmon" # Thuc.
labels_colors(dend2)[5] <- "darkred" # Athen.
labels_colors(dend2)[6] <- "darkorange" # Lysias
labels_colors(dend2)[c(8,9)] <- "deeppink" # Polybius
labels_colors(dend2)[c(10, 11, 12, 13, 14, 15)] <- "forestgreen" # Iliad
labels_colors(dend2)[c(16, 17, 18, 19, 20, 21)] <- "darkgoldenrod" # Odyssey
labels_colors(dend2)[c(22, 23, 24, 25, 26)] <- "cornflowerblue" # Sophocles
labels_colors(dend2)[c(27, 28, 29, 30, 31, 32, 33)] <- "blue" # Aeschylus
labels_colors(dend2)[c(34, 35, 36)] <- "blueviolet" # Hesiod
plot(dend2, main="Dendrogram of Ancient Languages Dependency Treebank")
source("code/corpusFunctions.R")
input.dir <- "../sWord_levels/files_with_sWords"
files.v <- dir(path=input.dir, pattern=".*xml")
doc.object <- xmlTreeParse(file.path(input.dir, files.v[1]), useInternalNodes=TRUE)
sWord.nodes <- xmlApply(doc.object, getNodeSet, "//Word")
sWord.nodes <- getNodeSet(doc.object, xmlChildren("//word"))
sWord.nodes <- getNodeSet(doc.object, "//word)"
)
sWord.nodes <- getNodeSet(doc.object, "//word")
sWord.nodes
class(sWord.nodes)
xmlChildren(sWord.nodes[1])
xmlChildren(sWord.nodes[[]])
xmlChildren(sWord.nodes[[1]])
word.nodes <- getNodeSet(doc.object, "//word")
sWord.nodes <- xmlChildren(word.nodes)
length(word.nodes)
sWord.nodes <- xmlChildren(word.nodes[[1]])
sWord.nodes
xmlValue(sWord.nodes)
xmlValue(sWord.nodes[1])
xmlValue(sWord.nodes[[1]])
xmlValue(sWord.nodes[[2]])
length(word.nodes)
length(sWord.nodes)
sapply(sWord.nodes, xmlValue)
paste(sapply(sWord.nodes, xmlValue), collapse = NULL)
sWord.nodes <- sapply(word.nodes, xmlChildren)
word.nodes[[1:3]]
word.nodes[[1]]
word.nodes[[1]][1]
sWord.contents <- paste(sapply(sWord.nodes, xmlValue), collapse = NULL)
sWord.contents <- append(sword.contents, paste(sapply(sWord.nodes, xmlValue), collapse = NULL))
length(sWord.nodes)
sWord.contents <- append(sword.contents, paste(sapply(sWord.nodes[[1]], xmlValue), collapse = NULL))
sWord.contents <- NULL
sWord.contents <- append(sword.contents, paste(sapply(sWord.nodes[[1]], xmlValue), collapse = NULL))
sWord.contents <- append(sWord.contents, paste(sapply(sWord.nodes[[1]], xmlValue), collapse = NULL))
sWord.contents <- NULL
i <- 1
for (i in 1:length(sWord.nodes)) {
sWord.contents <- append(sWord.contents, paste(sapply(sWord.nodes[[i]], xmlValue), collapse = NULL))
}
xmlChildren(word.nodes[[1]])
length(word.nodes)
length(sWord.nodes)
sWord.nodes[[1]]
xmlChildren(sWord.nodes[[1]])
sWord.nodes[[1]]
xmlValue(sWord.nodes[[1]])
xmlValue(sWord.nodes[[1]][1])
sapply(word.nodes, xmlChildren)
sapply(sapply(word.nodes, xmlChildren), xmlValue)
i <- 1
for (i in 1:length(files.v))  {
# read xml structure from file to .R object
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
# extract all <word> elements and children into XmlNodeList object
word.nodes <- getNodeSet(doc.object, "//word")
# extract all <sWord> elements from word,nodes. The result is an XMLNodeList object.
sWord.nodes <- sapply(word.nodes, xmlChildren)
j <- 1
sWord.contents <- NULL
for (j in 1:length(sWord.nodes)) {
# extract contents of all <sWord> elements. Result is a charcter vector object.
sWord.contents <- append(sWord.contents, paste(sapply(sWord.nodes[[j]], xmlValue), collapse = NULL))
}
sWord.contents <- tolower(sWord.contents)
}
input.dir <- "../sWord_levels/files_with_sWords"
files.v <- dir(path=input.dir, pattern=".*xml")
for (i in 1:length(files.v))  {
# read xml structure from file to .R object
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
# extract all <word> elements and children into XmlNodeList object
word.nodes <- getNodeSet(doc.object, "//word")
# extract all <sWord> elements from word,nodes. The result is an XMLNodeList object.
sWord.nodes <- sapply(word.nodes, xmlChildren)
j <- 1
sWord.contents <- NULL
for (j in 1:length(sWord.nodes)) {
# extract contents of all <sWord> elements. Result is a charcter vector object.
sWord.contents <- append(sWord.contents, paste(sapply(sWord.nodes[[j]], xmlValue), collapse = NULL))
}
sWord.contents <- tolower(sWord.contents)
}
sWord.table <- table(sWord.contents)
View(sWord.table)
sum(sWord.table)
sWord.freq.table <- 100*(sWord.table)
sWord.freq.table <- 100*(sWord.table/sum(sWord.table))
View(sWord.freq.table)
sWord.freq.table.list <- list()
sWord.freq.table.list[[i]] <- sWord.freq.table
input.dir <- "../sWord_levels/files_with_sWords"
files.v <- dir(path=input.dir, pattern=".*xml")
sWord.freq.table.list <- list()
for (i in 1:length(files.v))  {
# read xml structure from file to .R object
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
# extract all <word> elements and children into XmlNodeList object
word.nodes <- getNodeSet(doc.object, "//word")
# extract all <sWord> elements from word,nodes. The result is an XMLNodeList object.
sWord.nodes <- sapply(word.nodes, xmlChildren)
# The following loop extracts contents of all <sWord> elements, i.e., extracts the sWords themselve srom the XML.
# set incremetal variable for loop
j <- 1
# create vector object sWord,contents with no content.
sWord.contents <- NULL
for (j in 1:length(sWord.nodes)) {
# extract contents of all <sWord> elements. Result is a charcter vector object.
sWord.contents <- append(sWord.contents, paste(sapply(sWord.nodes[[j]], xmlValue), collapse = NULL))
}
# change sWord.contents vector to lower case
sWord.contents <- tolower(sWord.contents)
# create a contingency table of sWord.contents. The table lists nuber of occurences for all sWords.
sWord.table <- table(sWord.contents)
# normalize sWord.table by dividing by total sWords. Multiply by 100 to produce rate of sWord occurence per 100 sWords.
sWord.freq.table <- 100*(sWord.table/sum(sWord.table))
# insert sWord.freq.table into list
sWord.freq.table.list[[i]] <- sWord.freq.table
}
length(sWord.freq.table.list[[1]])
length(sWord.freq.table.list[[2]])
mapply(xmlValue, sWord.nodes)
seq_along(sWord.freq.table.list)
freqs.l <- mapply(data.frame, ID=seq_along(sWord.freq.table.list),
sWord.freq.table.list, SIMPLIFY=FALSE, MoreArgs=list(stringsAsFactors=FALSE))
freqs.l[[1]]
freqs.l[[1]][1]
freqs.l[[1]][,1]
freqs.l[[1]][1,1]
freqs.l[[1]][2,1]
freqs.l[[1]][2,2]
head(freqs.l)
freqs.df <- do.call(rbind, freqs.l)
View(freqs.df)
names(freqs.df)
result <- xtabs(Freq ~ ID+sword.contents, data=freqs.df)
result <- xtabs(Freq ~ ID+sWord.contents, data=freqs.df)
final.m <- apply(result, 2, as.numeric)
dim(final.m)
final.m[1,1:3]
names_for_files.v <- gsub (".xml", "", files.v)
rownames(final.m) <-names_for_files.v
rownames(final.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.0025]
dim(smaller.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.00025]
dim(smaller.m)
smaller.m <- final.m[, apply(final.m,2,mean)>=.025]
dim(smaller.m)
